security:
  enable_authenticator_manager: true

  password_hashers:
    App\Entity\User:
      algorithm: auto

  providers:
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    api_login:
      pattern:   ^/api/login_check$
      stateless: true
      provider:  app_user_provider
      json_login:
        check_path:       /api/login_check
        username_path:    email
        password_path:    password
        success_handler:  lexik_jwt_authentication.handler.authentication_success
        failure_handler:  lexik_jwt_authentication.handler.authentication_failure

    api_public:
      # ce firewall "attrape" uniquement GET /api/tickets
      pattern:   ^/api/tickets$
      stateless: true
      security:  false

    api:
      pattern:   ^/api
      stateless:  true
      provider:   app_user_provider
      jwt:        ~

  access_control:
    # login_check doit rester anonyme
    - { path: ^/api/login_check$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    # (optionnel) vous pouvez laisser cette ligne, mais le firewall public la gère déjà
    - { path: ^/api/tickets$,      roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [GET] }

    - { path: ^/api/contacts$,      roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [GET] }
    # tout le reste nécessite un JWT
    - { path: ^/api,               roles: IS_AUTHENTICATED_FULLY }